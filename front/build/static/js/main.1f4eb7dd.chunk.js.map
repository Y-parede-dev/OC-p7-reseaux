{"version":3,"sources":["logo.svg","component/Header.js","assets/js/Loader.js","assets/js/Function.js","component/CreateComment.js","component/DeleteComment.js","component/ModifComment.js","component/Api.js","component/Comment.js","component/ModifPost.js","component/DeletePost.js","component/Likes.js","component/Signaler.js","component/Card.js","component/CreatePost.js","component/Main.js","component/Signup.js","component/Login.js","component/ModifAccount.js","component/DeleteAccount.js","component/Account.js","component/Footer.js","component/App.js","reportWebVitals.js","index.js"],"names":["window","onscroll","fixOnScroll","srll","sessionStorage","setItem","curentPage","location","href","split","classForLinkBase","classForLinkAdvenced","elt","document","getElementById","body","scrollTop","documentElement","className","Header","isConected","setIsConected","src","logo","alt","onScroll","id","includes","onClick","clear","MyLoader","props","speed","width","height","viewBox","backgroundColor","foregroundColor","d","x","y","rx","ry","cx","cy","r","createHeader","myHeaders","Headers","append","contentPostOrModif","contentPost","requete","refer","set","urlWeb","VerifState","state","setState","CreateComment","postId","commentUpp","setCommentUpp","useState","contentComment","setContentComment","userStorage","getItem","userStorageJson","JSON","parse","recupUserCo","PrecupUserCo","onSubmit","event","preventDefault","user_id","content","post_id","headerWithToken","token","myInit","method","headers","mode","cache","stringify","fetch","then","res","json","catch","err","console","log","htmlFor","type","name","value","onChange","target","DeleteComment","recupComment","recupCommentParse","post_id_comment","comment_user_id","comment_id","ModifComment","setCommentOnModif","removeItem","GetPost","url","setIsLoaded","setItems","a","result","req","GetComment","setComments","setError","error","Comment","isLoaded","comments","commentOnModif","userCoId","ifAdmin","ifAdminP","postI","postIdRecup","postIdToNumber","parseInt","urlComm","useEffect","message","map","item","avatar_user","comment_user","comment_user_prenom","comment_content","aria-label","idC","idComment","classList","toggle","btnToglC","isAdmin","Date","now","ModifPost","postM","setPostM","setContentPost","contentPostImg","setContentPostImg","recupPost","recupPostParse","FormData","id_post","image_url","url_web","accept","files","imageData","DeletePost","Likes","btnToglComment","isLiked","setIsLiked","likesNumber","setLikesNumber","urlTest","forEach","likes","onLoad","user","like_numb","rep","waitConnect","Signaler","RecipeReviewCard","onModif","setOnModif","postOnModif","setPostOnModif","setUserCoId","items","userIdToken","pUserIdToken","userIsAdmin","userIsAdminP","btnToglSignaler","idP","idPost","querySelector","setTimeout","avatar","nom_post","prenom_post","date_post","btnTogl","content_post","join","allow","allowFullScreen","image_post","Loader","CreatePost","datePostString","toLocaleString","weekday","year","month","day","hour","minute","reqBase","placeholder","prenom","Main","urlPost","Signup","nameData","setNameData","prenomData","setPrenomData","emailData","setEmailData","passwordData","setPasswordData","messageValid","setMessageValid","userIsComplete","handleSubmit","saveUser","nom","adresse_email","mot_de_passe","status","test","isValidEmailFront","Login","messageData","setMessageData","logUser","resultJson","SaveLocal","getUserCo","connected","uIsCo","uIsCoP","resu","it","ModifAccount","userModif","imgData","setImgData","userStorageId","userIsCo","userIsCoParse","password","putInit","DeleteAccount","isDelete","confirm","delInit","Account","setUser","setUserModif","urlRequete","Footer","App","URL","isCo","isCOJson","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1f4eb7dd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6290aae4.svg\";","import logo from '../logo.svg';\r\nimport '../styles/Header.css';\r\n\r\nconst disconnect = () =>{\r\n    //localStorage.clear()\r\n    //sessionStorage.removeItem('isCo');\r\n    //sessionStorage.removeItem('token+id');\r\n    sessionStorage.clear()\r\n\r\n};\r\nwindow.onscroll = ()=>{fixOnScroll()};\r\nlet srll = false;\r\nsessionStorage.setItem('scroll', srll)\r\nconst curentPage = window.location.href.split('/')[3];\r\n\r\nconst classForLinkBase = 'selected-li selected-li-co';\r\nconst classForLinkAdvenced = 'selected-li-co selected-li focus-on-position';\r\nconst fixOnScroll =()=>{\r\n    let elt = document.getElementById('sign-log');\r\n    if (curentPage == \"account\" && document.body.scrollTop > 100 || document.documentElement.scrollTop > 100){\r\n        elt.className = 'ul-sign-log scrol-fixed';\r\n        srll = true;\r\n        sessionStorage.setItem('scroll', srll);\r\n    }else {\r\n        elt.className = 'ul-sign-log';\r\n        srll = false;\r\n        sessionStorage.setItem('scroll', srll);\r\n        \r\n        //elt.classList.remove('scrol-fixed');\r\n    }\r\n}\r\n\r\nfunction Header({isConected, setIsConected}){\r\n    const titleHeader = \"groupomania\";\r\n    \r\n    return (\r\n        <header className=\"App-header\">\r\n            <div className=\"header\">\r\n                <h1 className='header-title '>{titleHeader}</h1>\r\n                <img src={logo} className=\"App-logo\" alt=\"logo Groupomania\" />\r\n            </div>\r\n            {!isConected? <ul onScroll={fixOnScroll} id='sign-log' className=\"ul-sign-log\">\r\n                \r\n                \r\n                <li>\r\n                    <a className='selected-li' href='./signup'>nouveau compte</a>\r\n                </li>\r\n                <li>\r\n                    <a className='selected-li' id='login-link' href='./login' >se connecter</a>\r\n                </li>\r\n                \r\n            </ul>: <ul onScroll={fixOnScroll} id='sign-log' className=\" ul-sign-log\">\r\n                \r\n                <li>\r\n                    <a className={curentPage.includes('main') || curentPage == 'main'? classForLinkAdvenced : classForLinkBase} id=\"Acceuil\" href='./main'>\r\n                        <i className=\"fas-custom-header-isCo fas-home-custom fas fa-home\"></i>\r\n                        <p className='none-on-small'>Acceuil</p></a>\r\n                </li>\r\n                <li>\r\n                    <a className={curentPage.includes('account') || curentPage == 'account' || curentPage == 'modify'? classForLinkAdvenced : classForLinkBase} id=\"Account\" href='./account'>\r\n                        <i className=\"fas-custom-header-isCo fas-adress-card-custom fas fa-address-card\"></i>\r\n                        <p className='none-on-small'>Mon compte</p></a>\r\n                </li>\r\n                <li>\r\n                    <a className='selected-li selected-li-co' id='Disconect' onClick={()=>disconnect()} href='./'>\r\n                        <i className=\"fas-custom-header-isCo fas fa-sign-out-alt\"></i>\r\n                        <p className='none-on-small'>Se déconnecter</p></a>\r\n                </li>\r\n                \r\n                \r\n            </ul>}\r\n        </header>\r\n        \r\n    )\r\n};\r\n\r\nexport default Header;\r\n\r\n","import React from \"react\"\r\nimport ContentLoader from \"react-content-loader\"\r\n\r\nconst MyLoader = (props) => (\r\n  <ContentLoader \r\n    speed={1.8}\r\n    width={350}\r\n    height={500}\r\n    viewBox=\"0 0 500 400\"\r\n    backgroundColor=\"#2f435e\"\r\n    foregroundColor=\"#ffffff\"\r\n    {...props}\r\n  >\r\n    <path d=\"M 484.52 64.61 H 15.65 C 7.1 64.61 0.17 71.2 0.17 79.31 v 220.51 c 0 8.12 6.93 14.7 15.48 14.7 h 468.87 c 8.55 0 15.48 -6.58 15.48 -14.7 V 79.31 c 0 -8.11 -6.93 -14.7 -15.48 -14.7 z m -9 204.34 c 0 11.84 -7.14 21.44 -15.94 21.44 h -23.19 l -77.23 -118.87 c -7.1 -10.92 -19.67 -11.16 -27 -0.51 l -73.52 106.93 C 253.78 285 245.73 286 240 280.2 l -79.75 -80.62 c -6 -6.06 -14.33 -5.7 -20 0.88 l -77.91 89.93 H 40.63 c -8.8 0 -15.94 -9.6 -15.94 -21.44 V 110.19 c 0 -11.84 7.14 -21.44 15.94 -21.44 h 418.91 c 8.8 0 15.94 9.6 15.94 21.44 z\" /> \r\n    <rect x=\"69\" y=\"1\" rx=\"5\" ry=\"5\" width=\"87\" height=\"16\" /> \r\n    <rect x=\"412\" y=\"359\" rx=\"5\" ry=\"5\" width=\"87\" height=\"16\" /> \r\n    <rect x=\"69\" y=\"25\" rx=\"4\" ry=\"4\" width=\"167\" height=\"27\" /> \r\n    <circle cx=\"31\" cy=\"31\" r=\"29\" />\r\n  </ContentLoader>\r\n)\r\n\r\nexport default MyLoader","// Création Header requetes a l'API\r\n\r\nexport const createHeader = () => {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append('Content-Type', 'application/json');\r\n   // myHeaders.get('content-type');\r\n    return myHeaders;\r\n};\r\n// Création Header requetes avec token a l'API\r\n\r\n\r\n// reGex email\r\nexport const isValidEmailFront = (value) => {\r\n    let reGex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\r\n    return reGex.test(value);\r\n};\r\n// reGex password (entre 8-15 caract. / au moins 1 chifre 1maj. une min et au moins un carct. spé.)\r\nexport const isValidPasswordFront = (value) => {\r\n    let reGex = /^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[-+!*$@%_])([-+!*$@%_\\w]{8,15})$/;\r\n    return reGex.test(value);\r\n};\r\n// creation ou modification d'un article\r\n\r\n export const contentPostOrModif = (contentPost, requete) => {\r\n    if(contentPost.includes('http://www.')||contentPost.includes('https://www')){\r\n        if(!contentPost.includes(' http')){\r\n            if(contentPost.includes('&t')){\r\n                const refer = contentPost.split('&t')[0];\r\n                requete.set('url_web', refer);\r\n            }\r\n            if(contentPost.includes('&l')){\r\n                const refer = contentPost.split('&l')[0];\r\n                requete.set('url_web', refer);\r\n            }\r\n                \r\n        }else{\r\n            if(contentPost.includes('https:')){\r\n                const refer = contentPost.split('https:')[1]\r\n                requete.set('content', contentPost.split('https:')[0]);\r\n                if(contentPost.includes('&t') || contentPost.includes('&l')){\r\n                    if(contentPost.includes('&t')){\r\n                        const urlWeb =  refer.split('&t')[0];\r\n                        requete.set('url_web', `https:${urlWeb}`);\r\n\r\n                    }\r\n                    if(contentPost.includes('&l')){\r\n                        const urlWeb =  refer.split('&l')[0];\r\n                        requete.set('url_web', `https:${urlWeb}`);\r\n                    }\r\n                }else{\r\n                    requete.set('url_web', `https:${refer}`);\r\n                }                    \r\n\r\n            }else {\r\n                const refer = contentPost.split('http:')[1]\r\n                requete.set('content', contentPost.split('http:')[0]);\r\n                if(contentPost.includes('&t') || contentPost.includes('&l')){\r\n                    if(contentPost.includes('&t')){\r\n                        const urlWeb =  refer.split('&t')[0];\r\n                        requete.set('url_web', `http:${urlWeb}`);\r\n\r\n                    }\r\n                    if(contentPost.includes('&l')){\r\n                        const urlWeb =  refer.split('&l')[0];\r\n                        requete.set('url_web', `http:${urlWeb}`);\r\n                    }\r\n                }else{\r\n                    requete.set('url_web', `http:${refer}`);\r\n                }   \r\n            }\r\n            \r\n        }\r\n        \r\n    }else {\r\n        if(contentPost == 'undefined'){\r\n            requete.set('content', '');\r\n\r\n        }\r\n        requete.set('content', contentPost);\r\n    }\r\n}\r\n// verification d'etatt\r\nexport const VerifState=(state, setState)=>{\r\n    if(state == true){\r\n        setState(false)\r\n    }else{\r\n        setState(true)\r\n    }\r\n}\r\n\r\n","import { useState } from \"react\";\r\nimport { createHeader, VerifState } from \"../assets/js/Function\";\r\nimport '../styles/CreateComment.css';\r\nfunction CreateComment( {postId, commentUpp, setCommentUpp}){\r\n\r\n    const [contentComment, setContentComment] = useState('');\r\n    const userStorage = sessionStorage.getItem(\"token+id\");\r\n    const userStorageJson = JSON.parse(userStorage);\r\n    const recupUserCo = sessionStorage.getItem('userIsCo');\r\n    const PrecupUserCo = JSON.parse(recupUserCo);\r\n    const handleSubmit = (event) => {\r\n        \r\n        event.preventDefault();\r\n        const requete = {\r\n            user_id: \"\",\r\n            content: contentComment,\r\n            post_id:postId\r\n        }\r\n        \r\n        requete.user_id = PrecupUserCo.id;\r\n        \r\n        const headerWithToken = new Headers();\r\n        headerWithToken.append('Content-type','application/json');\r\n        headerWithToken.append('Authorization', 'Bearer ' + userStorageJson.token);\r\n        \r\n        const myInit = { \r\n            method: 'POST',\r\n            headers: headerWithToken,\r\n            mode: 'cors',\r\n            cache: 'default',\r\n            body: JSON.stringify(requete)\r\n        };\r\n        VerifState(commentUpp, setCommentUpp)\r\n        \r\n        setContentComment('')\r\n        fetch(\"http://localhost:3001/api/comment\", myInit)\r\n        .then(res=>res.json())\r\n        \r\n        .catch(err=>console.log(err))\r\n        \r\n\r\n    }\r\n    const handleChangeContent = (event) =>{\r\n        setContentComment(event.target.value);\r\n    }\r\n  \r\n    return(\r\n        \r\n        <form onSubmit={handleSubmit} id=\"form-create-comment\">\r\n            <label htmlFor=\"content-new-comment\"></label>\r\n            <textarea className=\"form-control-comment\" type=\"text\" name=\"content-new-comment\" value={contentComment} onChange={handleChangeContent}/>\r\n            <button className=\"form-control-comment form-control-comment-submit\" name=\"submit-login\" type=\"submit\">envoyer</button>\r\n\r\n        </form>\r\n    )\r\n};\r\nexport default CreateComment;","import { VerifState } from \"../assets/js/Function\";\r\n\r\nconst DeleteComment = ({commentUpp, setCommentUpp})=>{\r\n    const userStorage = sessionStorage.getItem(\"token+id\");\r\n    const userStorageJson = JSON.parse(userStorage);\r\n    const recupComment = sessionStorage.getItem('comment-modif');\r\n    const recupCommentParse = JSON.parse(recupComment);\r\n    console.log(recupCommentParse)\r\n    \r\n    const requete = {\r\n        post_id:recupCommentParse.post_id_comment,\r\n        user_id:recupCommentParse.comment_user_id,\r\n        comment_id: recupCommentParse.comment_id\r\n    }\r\n    const myHeaders = new Headers();\r\n   \r\n    myHeaders.append('Authorization', 'Bearer ' + userStorageJson.token);\r\n    myHeaders.append('Content-Type', 'application/json');\r\n    const myInit = { \r\n        method: 'DELETE',\r\n        headers: myHeaders,\r\n        mode: 'cors',\r\n        cache: 'default',\r\n        body: JSON.stringify(requete)\r\n    };\r\n    fetch(\"http://localhost:3001/api/comment/\" + recupCommentParse.comment_id, myInit)\r\n        .then(res=>res.json())\r\n\r\n        .catch(err=>console.log(err))\r\n        VerifState(commentUpp, setCommentUpp)\r\n}\r\n\r\nexport default DeleteComment;","import { useState } from 'react';\r\nimport { VerifState } from '../assets/js/Function';\r\n\r\nimport '../styles/ModifComment.css';\r\nconst ModifComment = ({ setCommentOnModif,commentUpp, setCommentUpp}) => {\r\n    const [contentComment, setContentComment] = useState('');\r\n\r\n    const userStorage = sessionStorage.getItem(\"token+id\");\r\n    const userStorageJson = JSON.parse(userStorage);\r\n    const recupUserCo = sessionStorage.getItem('userIsCo');\r\n    const PrecupUserCo = JSON.parse(recupUserCo);\r\n    const recupComment = sessionStorage.getItem('comment-modif');\r\n    const recupCommentParse = JSON.parse(recupComment);\r\n    \r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n       \r\n        const requete = {\r\n            user_id : \"\",\r\n            comment_id : recupCommentParse.comment_id,\r\n            content:recupCommentParse.content\r\n        }\r\n\r\n        requete.user_id = PrecupUserCo.id;\r\n               \r\n        if(contentComment != recupCommentParse.content) {\r\n            requete.content  = contentComment;\r\n        }\r\n        \r\n        const myHeaders = new Headers();\r\n            myHeaders.append('Authorization', 'Bearer ' + userStorageJson.token);\r\n            myHeaders.append('Content-type', 'application/json');\r\n            const myInit = { \r\n                method: 'PUT',\r\n                headers: myHeaders,\r\n                mode: 'cors',\r\n                cache: 'default',\r\n                body: JSON.stringify(requete)\r\n            };\r\n        fetch(\"http://localhost:3001/api/comment/\"+recupCommentParse.comment_id, myInit)\r\n        .then(res=>res.json())\r\n        \r\n        .catch(err=>console.log(err))\r\n        sessionStorage.removeItem('comment-modif')\r\n    \r\n        VerifState(commentUpp, setCommentUpp);\r\n        setCommentOnModif('')\r\n    }\r\n    const handleChangeContent = (event) =>{\r\n        setContentComment(event.target.value);\r\n       \r\n    }\r\n\r\n    return(\r\n        <section className=\"modif-comment\">\r\n            <form id=\"form-modif-comment\" onSubmit={handleSubmit}> \r\n                <label htmlFor=\"content-modif-comment\"></label>\r\n                <textarea className=\"form-control\" type=\"text\" name=\"content-modif-comment\" value={contentComment} onChange={handleChangeContent}/>\r\n                \r\n                <button onClick={()=>setCommentOnModif('')}className=\"form-control form-control-modif-comment-annuler\" name=\"annuler\" type=\"button\">annulez</button>\r\n                <button className=\"form-control form-control-modif-comment\" name=\"submit\" type=\"submit\">envoyer</button>\r\n                \r\n\r\n            </form>\r\n        </section>\r\n    )\r\n};\r\nexport default ModifComment;","const myHeaders = new Headers();\r\n\r\nconst myInit = { method: 'GET',\r\n                 headers: myHeaders,\r\n                 mode: 'cors',\r\n                 cache: 'default' };\r\nexport const GetPost = async(url, setIsLoaded, setItems) => {\r\n  const req = await fetch(url, myInit)\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n      setItems(result.result);\r\n      setIsLoaded(true)\r\n      } \r\n    )\r\n    return req\r\n  }\r\n\r\n  // get comment\r\nexport const GetComment = async(url, setComments, setIsLoaded, setError) => {\r\n  const req = await fetch(url, myInit)\r\n      .then(res => res.json())\r\n      .then(\r\n      (result) => {\r\n          setIsLoaded(true);\r\n          setComments(result.result);\r\n      },\r\n    \r\n      (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n      }\r\n  )\r\n  return req;\r\n};","import {useEffect, useState} from 'react';\r\nimport '../styles/Comment.css';\r\nimport CreateComment from './CreateComment';\r\nimport DeleteComment from './DeleteComment';\r\nimport ModifComment from './ModifComment';\r\nimport {GetComment} from './Api';\r\n\r\nexport default function Comment(postId) {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [comments, setComments] = useState([]);\r\n    const [commentOnModif, setCommentOnModif]= useState('');\r\n    const [commentUpp, setCommentUpp] = useState(false);\r\n    const userCoId = postId.userCoId;\r\n    const ifAdmin = sessionStorage.getItem('userIsCo')\r\n    const ifAdminP = JSON.parse(ifAdmin)\r\n    const postI = postId.postId;\r\n    const postIdRecup = JSON.stringify(postI);\r\n    const postIdToNumber = parseInt(postIdRecup, 10);\r\n    const urlComm = `http://localhost:3001/api/comment/${postI}`\r\n    useEffect(() => {\r\n        GetComment(urlComm, setComments, setIsLoaded, setError)\r\n        const myHeaders = new Headers();\r\n        const myInit = { method: 'GET',\r\n                        headers: myHeaders,\r\n                        mode: 'cors',\r\n                        cache: 'default' };\r\n        fetch(urlComm, myInit)\r\n            .then(res => res.json())\r\n            .then(\r\n            (result) => {\r\n                setIsLoaded(true);\r\n                setComments(result.result);\r\n                console.log(result)\r\n            },\r\n            (error) => {\r\n                setIsLoaded(true);\r\n                setError(error);\r\n            })\r\n        },[commentUpp]);\r\n        const btnToglC = (item, idC)=> {\r\n            sessionStorage.setItem('comment-modif', JSON.stringify(item))\r\n            let idComment = `myDropdown-${idC}`\r\n            document.getElementById(idComment).classList.toggle(\"show\");\r\n            document.getElementById(idComment).classList.toggle(\"comment\");\r\n          }\r\n        const displayModifComment =(itemP)=>{\r\n            const item = itemP;\r\n            setCommentOnModif(item)\r\n          }\r\n    if (error) {\r\n      return <div>Erreur : {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n     return <div>Chargement...</div>;\r\n    } else {\r\n        return (\r\n            <div className=\"comment\" id={`comment-${postIdToNumber}`}>\r\n                <CreateComment commentUpp={commentUpp} setCommentUpp={setCommentUpp} postId={postI}/>\r\n                <ul className='comment-ul'>\r\n                   {comments.map(item=>(\r\n                        <li className='comment-content' key={Date.now()+ item.post_id_comment+item.comment_id }>\r\n                            <img alt=\"avatar user comment\" className=\"avatar-comment\" src={urlComm.split('api')[0]+'images/avatars/'+item.avatar_user} />\r\n                            <div className='comment-user-content'>\r\n                                <p className=\"comment-user\">{`${item.comment_user} ${item.comment_user_prenom}` }</p>\r\n                            </div>\r\n                            <div className='content-comment-or-modif'>{item.comment_id != commentOnModif.comment_id?\r\n                                <div className='content-comment'>\r\n                                    <div className='comment-text-content'>\r\n                                      <p className='comment-text'>{item.comment_content}</p>\r\n                                    </div>\r\n                                    <div className='parametre-post parametre-comment'>\r\n                                        <button aria-label='settings' className=\"dropbtn dropbtn-comment\" onClick={()=>btnToglC(item, item.comment_id)}><i className=\"fas fa-ellipsis-h\"></i></button>\r\n                                    </div>\r\n                                    <div className=\"parametre-comment-open\">\r\n                                        <div className=\"dropdown bkcol\">\r\n                                            {userCoId == item.comment_user_id || ifAdminP.isAdmin == true  ?\r\n                                            <div className=\"dropdown-content dropdown-content-comment\" id={`myDropdown-${item.comment_id}`}>\r\n                                                <input type='button' className='btn-more-params-post btn-more-params-comment' onClick={()=>displayModifComment(item)} href=\"../modify-post\" value=\"modifier\" />\r\n                                                <input type=\"button\" className='btn-more-params-post btn-more-params-comment btn-more-params-comment-del' onClick={()=>DeleteComment({commentUpp,setCommentUpp})} value='suprimer' />\r\n                                            </div> :\r\n                                            <div className=\"dropdown-content dropdown-content-comment\" id={`myDropdown-${item.comment_id}`}>\r\n                                                <a className='btn-more-params-post btn-more-params-comment btn-more-params-comment-sign' href=\"#\">signaler</a>\r\n                                            </div>\r\n                                                }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>:<ModifComment setCommentOnModif={setCommentOnModif} commentUpp={commentUpp} setCommentUpp={setCommentUpp} ifAdmin ={ifAdminP.isAdmin} />}\r\n                            </div>\r\n                        </li>\r\n                        ))}\r\n                </ul>\r\n            </div>\r\n        )\r\n    };\r\n};","import { useState } from 'react';\r\nimport { contentPostOrModif } from '../assets/js/Function';\r\nimport '../styles/ModifPost.css';\r\nconst ModifPost = ({postM, setPostM}) => {\r\n    const [contentPost, setContentPost] = useState('');\r\n    const [contentPostImg, setContentPostImg] = useState([]);\r\n\r\n    const userStorage = sessionStorage.getItem(\"token+id\");\r\n    const userStorageJson = JSON.parse(userStorage);\r\n    const recupUserCo = sessionStorage.getItem('userIsCo');\r\n    const PrecupUserCo = JSON.parse(recupUserCo);\r\n    const recupPost = sessionStorage.getItem('post-modif');\r\n    const recupPostParse = JSON.parse(recupPost);\r\n    \r\n\r\n    const handleChangeImg = (event) => {\r\n        console.log(event.target.files[0])\r\n        \r\n        let imageData = event.target.files[0];\r\n        setContentPostImg(imageData);\r\n        \r\n        console.log( imageData)\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        if(postM==true){\r\n            setPostM(false)\r\n\r\n        }else{\r\n            setPostM(true)\r\n        }\r\n        event.preventDefault();\r\n       \r\n        const requete =new FormData();\r\n        requete.append('user_id','');\r\n        requete.append('post_id',recupPostParse.id_post);\r\n        requete.append('content',recupPostParse.content);\r\n        requete.append('image_url',recupPostParse.image_url);\r\n        requete.append('url_web',recupPostParse.url_web);\r\n       \r\n        requete.set('user_id', PrecupUserCo.id);\r\n           \r\n        \r\n        if(contentPostImg !=[]){\r\n            requete.set('image_url', contentPostImg);\r\n        }\r\n        contentPostOrModif(contentPost, requete);\r\n\r\n        \r\n        const myHeaders = new Headers();\r\n            myHeaders.append('Authorization', 'Bearer ' + userStorageJson.token);\r\n            const myInit = { \r\n                method: 'PUT',\r\n                headers: myHeaders,\r\n                mode: 'cors',\r\n                cache: 'default',\r\n                body: requete\r\n            };\r\n        fetch(\"http://localhost:3001/api/post/\"+recupPostParse.id_post, myInit)\r\n        .then(res=>res.json())\r\n        \r\n        .catch(err=>console.log(err))\r\n        sessionStorage.removeItem('post-modif')\r\n    }\r\n    const handleChangeContent = (event) =>{\r\n        setContentPost(event.target.value);\r\n       \r\n    }\r\n\r\n    return(\r\n        <section className=\"modif-post\">\r\n            <form id=\"form-modif-post\" onSubmit={handleSubmit}> \r\n                <label htmlFor=\"content-modif-post\"></label>\r\n                <textarea className=\"form-control\" type=\"text\" name=\"content-modif-post\" value={contentPost} onChange={handleChangeContent}/>\r\n                <label className=\"image-post-label pos-lab-on-input\" htmlFor='image-modif-post'><i className=\"fas fa-image\"></i></label>\r\n                <input className=\"form-control image-post image-post-modif pos-lab-on-input\" type=\"file\" name=\"image-modif-post\" accept=\"image/*\" onChange={handleChangeImg} />\r\n                \r\n                <button onClick={()=>window.location.href='./main'} className=\"form-control form-control-modif-post form-control-modif-post-annuler\" name=\"annuler\" type=\"button\">annulez</button>\r\n                <button className=\"form-control form-control-modif-post\" name=\"submit\" type=\"submit\">envoyer</button>\r\n                \r\n\r\n            </form>\r\n        </section>\r\n    )\r\n};\r\nexport default ModifPost;","import DeleteComment from \"./DeleteComment\";\r\n\r\nconst DeletePost = ({setPostM, postM})=>{\r\n    const userStorage = sessionStorage.getItem(\"token+id\");\r\n    const userStorageJson = JSON.parse(userStorage);\r\n    const recupPost = sessionStorage.getItem('post-modif');\r\n    const recupPostParse = JSON.parse(recupPost);\r\n    console.log(recupPostParse)\r\n    const requete = {\r\n        user_id:recupPostParse.user_id,\r\n        post_id:recupPostParse.id_post\r\n    }\r\n    const myHeaders = new Headers();\r\n    myHeaders.append('Authorization', 'Bearer ' + userStorageJson.token);\r\n    myHeaders.append('Content-Type', 'application/json');\r\n    const myInit = { \r\n        method: 'DELETE',\r\n        headers: myHeaders,\r\n        mode: 'cors',\r\n        cache: 'default',\r\n        body: JSON.stringify(requete)\r\n    };\r\n    fetch(\"http://localhost:3001/api/post/\" + recupPostParse.id_post, myInit)\r\n        .then(res=>res.json())\r\n\r\n        .catch(err=>console.log(err))\r\n    \r\n    sessionStorage.removeItem('post-modif')\r\n    if(postM ==true){\r\n        setPostM(false)\r\n    }else {\r\n        setPostM(true)\r\n\r\n    }\r\n}\r\n\r\nexport default DeletePost;","import { VerifState } from \"../assets/js/Function\";\r\nimport { useEffect, useState } from 'react';\r\n//id_post={item.id_post} likesNumber={item.likes} isLiked={isLiked} setIsLiked={setIsLiked}\r\n\r\n\r\n\r\nconst Likes = ({id_post, btnToglComment, url}) => {\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const [likesNumber, setLikesNumber] = useState(0);\r\n\r\n    useEffect(()=>{\r\n       \r\n        const urlTest = `${url}/${id_post}/like`\r\n        fetch(urlTest)\r\n          .then(res=>res.json())\r\n          .then(result=>{\r\n            console.log(result.result)\r\n            result.result.forEach((likes)=>{\r\n                console.log(likes.likes)\r\n                setLikesNumber(likes.likes)\r\n            })\r\n    \r\n          })\r\n      },[isLiked])\r\n    \r\n    const req = (id_post, likesNumber)=>{\r\n       \r\n        const myHeaders = new Headers();\r\n        myHeaders.set('Content-type', 'application/json');\r\n        const url = `http://localhost:3001/api/post/${id_post}/like`;\r\n        const user = sessionStorage.getItem('userIsCo')\r\n        const userP = JSON.parse(user);\r\n        \r\n\r\n        const requete =  {\r\n            post_id: id_post,\r\n            user_id: userP.id,\r\n            like_numb: likesNumber\r\n        }\r\n        const myInit = { \r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            mode: 'cors',\r\n            cache: 'default',\r\n            body:JSON.stringify(requete)\r\n        };\r\n        const waitConnect = async ()=>{\r\n        const rep = await fetch(url, myInit)\r\n        .then(res => res.json())\r\n        VerifState(isLiked, setIsLiked)\r\n        return rep;\r\n        \r\n        }\r\n        waitConnect()\r\n        \r\n    }\r\n    \r\n        \r\n    \r\n    return(\r\n        <div className=\"like-unlike\">\r\n            <button alt='like' onLoad={()=>{}} onClick={()=>{req(id_post, likesNumber)}} id={`like-${id_post}`} className='like'><i className=\"fas fa-heart\"></i></button>\r\n            <span className='like-count' id={`like-count-${id_post}`}>{likesNumber}</span>\r\n            <button alt='like' onClick={()=>btnToglComment(id_post)} className='btn-comment'><i className=\"far fa-comments\"></i></button>\r\n        </div>    \r\n    )\r\n      \r\n    \r\n}\r\n\r\n\r\n\r\n/*const Likes = (postId, likeNumb, {isLiked, setIsLiked}) => {\r\n    \r\n    const myHeaders = new Headers();\r\n        myHeaders.set('Content-type', 'application/json');\r\n    const url = `http://localhost:3001/api/post/${postId}/like`;\r\n    const user = sessionStorage.getItem('userIsCo')\r\n    const userP = JSON.parse(user);\r\n    \r\n\r\n    const requete =  {\r\n        post_id: postId,\r\n        user_id: userP.id,\r\n        like_numb: likeNumb\r\n    }\r\n    const myInit = { \r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        mode: 'cors',\r\n        cache: 'default',\r\n        body:JSON.stringify(requete)\r\n    };\r\n    const waitConnect = async ()=>{\r\n    const rep = await fetch(url, myInit)\r\n    .then(res => res.json())\r\n    VerifState(isLiked, setIsLiked)\r\n    return rep;\r\n    \r\n    }\r\n    waitConnect()\r\n    return(\r\n        <div className=\"like-unlike\">\r\n            <button alt='like' onClick={()=>{Likes(postId, likeNumb)}} id={`like-${postId}`} className='like'><i className=\"fas fa-heart\"></i></button>\r\n            <span className='like-count' id={`like-count-${postId}`}>{likeNumb}</span>\r\n            \r\n        </div>\r\n    )\r\n      \r\n    \r\n}*/\r\nexport default Likes;","import '../styles/Signaler.css'\r\nconst Signaler = ({postId}) => {\r\n\r\n    \r\n    const checkBox = () => {\r\n        /*\r\n        if(document.getElementById('propos-sexiste').checked){\r\n            alert('sexiste')\r\n        }*/\r\n    }\r\n    \r\n    return(\r\n        <form id={`signaler-${postId}`} className='comment form-signaler'>\r\n            <div className='propos propos-sexiste'>\r\n                <input id='propos-sexiste' name='propos-sexiste' onClick={()=>checkBox()} type='checkbox' />\r\n                <label htmlFor='propos-sexiste'>propos-sexiste</label>\r\n            </div>\r\n            <div className='propos propos-raciste'>\r\n                <input id='propos-raciste' name='propos-raciste' type='checkbox' />\r\n                <label htmlFor='propos-raciste'>propos-raciste</label>\r\n            </div>\r\n            <div className='propos propos-difflamatoire'>\r\n                <input id='propos-difflamatoire' name='propos-difflamatoire' type='checkbox' />\r\n                <label htmlFor='propos-difflamatoire'>propos-difflamatoire</label>\r\n            </div>\r\n            <button type='submit'>envoyer</button>\r\n        </form>\r\n    )\r\n}\r\nexport default Signaler;","import React,{ useEffect, useState } from 'react';\r\n\r\nimport Loader from '../assets/js/Loader';\r\nimport Comment from './Comment';\r\n\r\n\r\nimport '../styles/Card.css';\r\nimport ModifPost from './ModifPost';\r\nimport DeletePost from './DeletePost';\r\nimport Likes from './Likes';\r\nimport Signaler from './Signaler';\r\nimport { GetPost } from './Api';\r\n\r\n\r\nconst url=\"http://localhost:3001/api/post/\";\r\n\r\nexport default function RecipeReviewCard({postM, setPostM, url}) {\r\n  const [onModif, setOnModif] = useState(false);\r\n  const [postOnModif, setPostOnModif]= useState('');\r\n  const [userCoId, setUserCoId] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [items, setItems] = useState([]);\r\n  \r\n  const userIdToken = sessionStorage.getItem('token+id');\r\n  const pUserIdToken = JSON.parse(userIdToken);\r\n  const userIsAdmin = sessionStorage.getItem('userIsCo');\r\n  const userIsAdminP = JSON.parse(userIsAdmin);\r\n\r\n  const btnTogl = (item, name, idP)=> {\r\n    sessionStorage.setItem('post-modif', JSON.stringify(item))\r\n    let idPost = name + '-' + idP\r\n    document.getElementById(idPost).classList.toggle(\"show\");\r\n\r\n    \r\n  }\r\n  const btnToglSignaler = (item, name, idP) => {\r\n    \r\n    sessionStorage.setItem('post-modif', JSON.stringify(item))\r\n    let idPost = name + '-' + idP\r\n    document.getElementById(idPost).classList.toggle(\"show-signaler\");\r\n    document.querySelector('body').classList.toggle(\".body\");\r\n  }\r\n  const btnToglComment = (idP)=> {\r\n    let idPost = `comment-${idP}`\r\n    document.getElementById(idPost).classList.toggle(\"show\");\r\n    \r\n  }\r\n\r\n  const displayModifPost =(itemP)=>{\r\n    const item = itemP;\r\n    setPostOnModif(item)\r\n    if(onModif){\r\n      setOnModif(false)\r\n    }else{\r\n      setOnModif(true)\r\n    }\r\n  }\r\n  console.log(items)\r\n\r\n  useEffect(() => {\r\n    setUserCoId(pUserIdToken.user_id);\r\n    setTimeout(()=>{\r\n      GetPost(url, setIsLoaded, setItems)\r\n\r\n    },300)\r\n    console.log(items)\r\n  }, [postM]);\r\n  \r\n\r\n  if (error) {\r\n    return <div>Erreur : {error.message}</div>;\r\n  \r\n  } else {\r\n    return (\r\n      <div className=\"side-post\"> {\r\n        \r\n        <div id=\"post-full\" className='cards'>{items.map(item => ( \r\n          \r\n          <div id={`post-${item.id_post}`} key={Date.now()+((item.id_post+item.user_id)*2)} className='card-content'>{!isLoaded?<Loader />\r\n          \r\n          :<div className='card-content-or-load'>\r\n            <div className='header-post'>\r\n              <img alt=\"Avatar Utilisateur\" src={url.split(\"api\")[0]+\"images/avatars/\"+item.avatar} className='avatar-on-post'/>\r\n              <div className=\"post-name-date\">\r\n                <p className=\"post-name\">{item.nom_post +' '+ item.prenom_post}</p>\r\n                <p className=\"post-date\">{item.date_post}</p>\r\n              </div>\r\n              <div className='parametre-post'>\r\n                <button aria-label='settings' className=\"dropbtn\" onClick={()=>btnTogl(item, \"myDropdown\", item.id_post)}><i className=\"fas fa-ellipsis-h\"></i></button>\r\n              </div>\r\n              <div className=\"parametre-post-open\">\r\n                  <div className=\"dropdown bkcol\">\r\n                    {userCoId == item.user_id || userIsAdminP.isAdmin == true ?\r\n                    <div className=\"dropdown-content\" id={`myDropdown-${item.id_post}`}>\r\n                      <input type='button' className='btn-more-params-post' onClick={()=>displayModifPost(item)}  value=\"modifier\" />\r\n                      <input type=\"button\" className='btn-more-params-post btn-more-params-post-del' onClick={()=>DeletePost({postM, setPostM})} value='suprimer' />\r\n                    </div> :\r\n                    <div>\r\n                      <div className=\"dropdown-content\" id={`myDropdown-${item.id_post}`}>\r\n                        <input type='button' className='btn-more-params-post' onClick={()=>{btnToglSignaler(item, \"signaler\", item.id_post)}} value=\"signaler\" />\r\n                      </div>\r\n                      <div>\r\n                        \r\n                      </div>\r\n                    </div>\r\n                    }\r\n                  </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"content-or-modif\">{item.id_post != postOnModif.id_post?\r\n              <div className='content-post'>\r\n                <Signaler className=\"comment\" postId={item.id_post} id={`signaler-${item.id_post}`} />\r\n                {item.content_post!=''&&\r\n                \r\n                <p className=\"text-post\">{item.content_post}</p>}\r\n                \r\n                <div className=\"media_post\">\r\n                {item.url_web!= null && item.url_web!= \"null\" \r\n                ?\r\n                <iframe \r\n                  alt='video poster par utilisateur'\r\n                  className=\"iframe-media\"\r\n                  width=\"100%\"\r\n                  height=\"400px\"\r\n                  src={item.url_web!='undefined' ?item.url_web.split('watch?v=').join('embed/'):''}\r\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \r\n                  allowFullScreen=\"allowfullscreen\"\r\n                >\r\n                </iframe>\r\n                :<div className=\"media-post\">{item.image_post!= null && item.image_post!= \"null\" \r\n                  &&<img width='100%' height=\"auto\" className=\"iframe-media\" alt='file post' src={item.image_post!='undefined' ?url.split('api')[0]+\"images/posts/\" + item.image_post:'' }/>\r\n                 \r\n                    }\r\n                  </div>\r\n                  }\r\n                </div>\r\n\r\n                      \r\n              </div>:<ModifPost postM={postM} setPostM={setPostM}/>\r\n              }\r\n              </div>\r\n              <div className='header-comment'>\r\n                  <Likes url={url} id_post={item.id_post} btnToglComment={btnToglComment} />\r\n              </div>\r\n              <div className='comment-before'>\r\n                <Comment  id={`comment-${item.id_post}`} postId={item.id_post} userCoId ={userCoId} btnToglSignaler={btnToglSignaler} />\r\n              </div>\r\n            \r\n          </div>\r\n        }</div>\r\n          \r\n        ))}\r\n      </div>\r\n    }\r\n    </div>\r\n    );\r\n  };\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport {contentPostOrModif} from '../assets/js/Function'\r\nimport '../styles/CreatePost.css';\r\n\r\nconst CreatePost=({postM, setPostM})=>{\r\n    \r\n    const [contentPost, setContentPost] = useState('');\r\n    const [contentPostImg, setContentPostImg] = useState([]);\r\n    const userStorage = sessionStorage.getItem(\"token+id\");\r\n    const userStorageJson = JSON.parse(userStorage);\r\n    const recupUserCo = sessionStorage.getItem('userIsCo');\r\n    const PrecupUserCo = JSON.parse(recupUserCo);\r\n    const scrollFixPos =()=>{\r\n        let srll = sessionStorage.getItem('scroll');\r\n        let elt = document.getElementById('form-create-post');\r\n\r\n        if(srll){\r\n            elt.className ='with-scroll'\r\n        }\r\n    }  \r\n    const handleChangeImg = (event) => {\r\n        console.log(event.target.files[0])\r\n        let imageData = event.target.files[0];\r\n        setContentPostImg(imageData);\r\n        console.log( imageData)\r\n    };\r\n    const handleSubmit = (event) => {     \r\n        if(postM==true){\r\n            setPostM(false)\r\n\r\n        }else{\r\n            setPostM(true)\r\n        }\r\n        event.preventDefault();\r\n        const datePost = new Date();\r\n        let options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric',hour:'numeric', minute:'numeric' };\r\n        const datePostString =datePost.toLocaleString('fr-Fr', options);     \r\n        const requete = new FormData();\r\n        requete.append('user_id','');\r\n        requete.append('content','');\r\n        requete.append('date_post',datePostString);\r\n        requete.append('image_url',null);\r\n        requete.append('url_web',null);  \r\n        requete.set('user_id',PrecupUserCo.id);\r\n        contentPostOrModif(contentPost, requete);   \r\n        if(contentPost.includes('http://www.')||contentPost.includes('https://www')){\r\n            requete.set('image_url', null);\r\n            if(!contentPost.includes(' http')){\r\n                if(contentPost.includes('&list')){\r\n                    requete.set('url_web', contentPost.split('&list')[0]);\r\n                } else {\r\n                    requete.set('url_web', contentPost);\r\n                }\r\n            }else{\r\n                if(contentPost.includes('https:')){\r\n                    requete.set('content', contentPost.split('https:')[0]);\r\n                    let reqBase = contentPost.split('https:')[1];\r\n                    let urlWeb = reqBase;\r\n                    if(contentPost.includes('&list')){\r\n                        urlWeb = reqBase.split(\"&list\")[0]\r\n                        requete.set('url_web', `https:${urlWeb}`);\r\n                    }else{\r\n                        const urlWeb =  contentPost.split('https:')[1];\r\n                        requete.set('url_web', `https:${urlWeb}`);\r\n                    }\r\n                }else {\r\n                    requete.set('content', contentPost.split('http:')[0]);\r\n                    let reqBase = contentPost.split('http:')[1];\r\n                    let urlWeb = reqBase;\r\n                    if(contentPost.includes('&list')){\r\n                        urlWeb = reqBase.split(\"&list\")[0]\r\n                        requete.set('url_web', `http:${urlWeb}`);\r\n                    }else{\r\n                        const urlWeb =  contentPost.split('http:')[1];\r\n                        requete.set('url_web', `http:${urlWeb}`);\r\n                    }\r\n                }  \r\n            }  \r\n        }else {\r\n            if(contentPostImg !=[]){\r\n                requete.set('image_url', contentPostImg);\r\n            }\r\n            requete.set('content', contentPost);\r\n        }\r\n        const myHeaders = new Headers();\r\n            myHeaders.append('Authorization', 'Bearer ' + userStorageJson.token);\r\n            const myInit = { \r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                mode: 'cors',\r\n                cache: 'default',\r\n                body: requete\r\n            };\r\n        fetch(\"http://localhost:3001/api/post\", myInit)\r\n            .then(res=>res.json())\r\n            .catch(err=>console.log(err))\r\n    }\r\n    const handleChangeContent = (event) =>{\r\n        setContentPost(event.target.value);\r\n    }\r\n    return(\r\n        <form id=\"form-create-post\" onLoad={scrollFixPos} onSubmit={handleSubmit}> \r\n            <p className=\"title-form-post\"></p>\r\n            <label htmlFor=\"content-post\"></label>\r\n            <textarea className=\"form-control\" type=\"text\" name=\"content-post\" placeholder={`Que souhaitez vous poster ${PrecupUserCo.prenom} ?`}  value={contentPost} onChange={handleChangeContent}/>\r\n            <label className=\"image-post-label\" htmlFor='image-post'><i className=\"fas fa-image\"></i></label>\r\n            <input className=\"form-control image-post\" type=\"file\" name=\"image-post\" accept=\"image/*\" onChange={handleChangeImg} />\r\n            <button className=\"form-control form-control-su\" name=\"submit-login\" type=\"submit\">envoyer</button>\r\n        </form>\r\n    )\r\n};\r\nexport default CreatePost;","\r\n\r\nimport RecipeReviewCard from './Card';\r\nimport CreatePost from './CreatePost';\r\nimport {useState} from 'react';\r\nfunction Main({isConected, setIsConected}){\r\n  const [postM, setPostM] = useState(false);\r\n  const url=\"http://localhost:3001/api\";\r\n  const urlPost =`${url}/post`\r\n  console.log(urlPost)\r\n    return(\r\n        <main>\r\n            { isConected &&\r\n            <div className=\"content-main\" key={Date.now()}>\r\n                <CreatePost postM={postM} setPostM={setPostM}/>\r\n                <RecipeReviewCard url={urlPost} postM={postM} setPostM={setPostM}/>\r\n            </div>\r\n            }\r\n        </main>\r\n    )\r\n};\r\nexport default Main;","import '../styles/Signup.css';\r\nimport {useEffect, useState} from 'react';\r\nimport {createHeader, isValidEmailFront, isValidPasswordFront} from '../assets/js/Function';\r\n\r\nfunction Signup(){\r\n  sessionStorage.clear()\r\n  const [nameData, setNameData] = useState('');\r\n  const [prenomData, setPrenomData] = useState('');\r\n  const [emailData, setEmailData] = useState('');\r\n  const [passwordData, setPasswordData] = useState('');\r\n  const [messageValid, setMessageValid] = useState('');\r\n  \r\n\r\n  let userIsComplete = false ;\r\n\r\n \r\n  const handleChangeName = (event) => {\r\n    setNameData(event.target.value);\r\n  };\r\n  const handleChangePrenom = (event) => {\r\n    setPrenomData(event.target.value);\r\n  };\r\n  const handleChangeEmail = (event) => {\r\n    setEmailData(event.target.value);\r\n  };\r\n  const handleChangePassword = (event) => {\r\n    setPasswordData(event.target.value);\r\n  };\r\n  const handleSubmit = async(event) => {\r\n    event.preventDefault();\r\n    saveUser();\r\n    window.location.href='../'\r\n  };\r\n  \r\nconst requete = {\r\n    nom: nameData,\r\n    prenom:prenomData,\r\n    adresse_email :emailData,\r\n    mot_de_passe: passwordData,\r\n };\r\nconst myInit = { \r\n    method: 'POST',\r\n    headers: createHeader(),\r\n    mode: 'cors',\r\n    cache: 'default',\r\n    body: JSON.stringify(requete)\r\n};\r\n\r\n\r\nconst saveUser=()=>{\r\n  fetch(\"http://localhost:3001/api/auth/signup\", myInit)\r\n      .then(res => res.json())\r\n      .then(result=>{\r\n        console.log(result.status);\r\n        setMessageValid(result.message);\r\n      })\r\n      \r\n};\r\n\r\nif (nameData !== \"\" && prenomData !== \"\" && isValidPasswordFront(passwordData) && isValidEmailFront(emailData)){\r\n  userIsComplete = true;\r\n};\r\n\r\n\r\n\r\n  return(\r\n    <div>\r\n      <form onSubmit={handleSubmit} id=\"form-signup\" className=\"form-log-sign\">\r\n        <label name=\"nom-label\" htmlFor='nom'></label>\r\n        <input id=\"nom-signup\" className=\"input-form nom\" name=\"nom\" type='text' placeholder=\"*nom\" value={nameData} onChange={handleChangeName} />\r\n        \r\n        <label name=\"prenom-label\" htmlFor='prenom'></label>\r\n        <input id=\"prenom-signup\" className=\"input-form prenom\" name=\"prenom\" type='text' placeholder=\"*prenom\" value={prenomData} onChange={handleChangePrenom} />\r\n\r\n        <label name=\"email-label\" htmlFor='email'></label>\r\n        <input id=\"email-signup\" className=\"input-form email\" name=\"email\" type='text' placeholder=\"*email\" value={emailData} onChange={handleChangeEmail} />\r\n\r\n        <label name=\"password-label\" htmlFor=\"password\"></label>\r\n        <input id=\"password-signup\" className=\"input-form password\" name='password' type='password' placeholder=\"*mot de passe\" value={passwordData} onChange={handleChangePassword} />\r\n        \r\n        <label name=\"submit-label\" htmlFor=\"submit\"></label>\r\n       \r\n        {userIsComplete && <button id=\"submit-signup\"  className=\"button-form button-log submit-log\" name='submit' type='submit' >envoyer</button>\r\n          }\r\n      </form>\r\n      <p className=\"message-erreur\">{messageValid}</p>\r\n    </div>\r\n  )\r\n};\r\nexport default Signup;","import { useState } from \"react\";\r\nimport {createHeader} from \"../assets/js/Function\";\r\nimport '../styles/Login.css';\r\n\r\nfunction Login({isConected, setIsConected}){\r\n  \r\n  const [emailData, setEmailData] = useState('');\r\n  const [passwordData, setPasswordData] = useState('');\r\n  const [messageData, setMessageData] = useState('');\r\n\r\n  const handleChangeEmail = (event) => {\r\n    setEmailData(event.target.value);\r\n  };\r\n  const handleChangePassword = (event) => {\r\n    setPasswordData(event.target.value);\r\n  };\r\n  const  handleSubmit = (event) => {\r\n    \r\n    event.preventDefault()\r\n    logUser();\r\n  };\r\n  const connected = (result) => {\r\n    \r\n    if(result.isConected){\r\n      setIsConected(result.isConected);\r\n      sessionStorage.setItem('isCo', true);\r\n    }\r\n  };\r\n  const SaveLocal = (result) => {\r\n    const resultJson = JSON.stringify(result);\r\n    sessionStorage.setItem('token+id', resultJson);\r\n  };\r\n  const requete = {\r\n    adresse_email : emailData,\r\n    mot_de_passe: passwordData\r\n  };\r\n  const myInit = { \r\n      method: 'POST',\r\n      headers: createHeader(),\r\n      mode: 'cors',\r\n      cache: 'default',\r\n      body: JSON.stringify(requete)\r\n  };\r\n  \r\n\r\n  const logUser = () => {\r\n    fetch(\"http://localhost:3001/api/auth/login\", myInit)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result.user_id)\r\n        setMessageData(result.message)\r\n        SaveLocal(result)\r\n        getUserCo();\r\n        connected(result)\r\n        },\r\n        (error) => {\r\n          console.log(error)\r\n        }\r\n      )\r\n  };\r\n  const getUserCo = ()=>{\r\n    const uIsCo = sessionStorage.getItem('token+id');\r\n    const uIsCoP= JSON.parse(uIsCo);\r\n    fetch('http://localhost:3001/api/auth/account/'+ uIsCoP.user_id)\r\n      .then(res=>res.json())\r\n      .then((resu)=>{\r\n        resu.result.forEach((it)=>{console.log(it);sessionStorage.setItem('userIsCo',JSON.stringify(it))})        \r\n    })\r\n  }\r\n    return(\r\n      <div> { !isConected ?\r\n       <div>\r\n        <form id=\"form-login\" className=\"form-log-sign\" onSubmit={handleSubmit}>\r\n            <label htmlFor=\"email-login\"></label>\r\n            <input className='input-form input-log email-log' name=\"email-login\" type=\"email\" placeholder=\"*email\" value={emailData} onChange={handleChangeEmail}/>\r\n\r\n            <label htmlFor=\"password-login\"></label>\r\n            <input className='input-form input-log password-log' name=\"password-login\" type=\"password\" placeholder=\"*mot de passe\" value={passwordData} onChange={handleChangePassword}/>\r\n            <button className='button-form button-log submit-log' name=\"submit-login\" type=\"submit\">envoyer</button>\r\n\r\n        </form>\r\n        <p className=\"message-erreur\">{messageData}</p>\r\n        </div>: window.location.href='../main'       \r\n        }\r\n      </div>\r\n    )\r\n};\r\n\r\nexport default Login;","import { useState } from \"react\";\r\nimport '../styles/ModifAccount.css';\r\n\r\n\r\nconst ModifAccount = (userModif) =>{\r\n    console.log(userModif.userModif)\r\n    const [nameData, setNameData] = useState('');\r\n    const [prenomData, setPrenomData] = useState('');\r\n    const [emailData, setEmailData] = useState('');\r\n    const [passwordData, setPasswordData] = useState('');\r\n    const [imgData, setImgData] = useState([]);\r\n    const handleChangeName = (event) => {\r\n        setNameData(event.target.value);\r\n    };\r\n    const handleChangePrenom = (event) => {\r\n        setPrenomData(event.target.value);\r\n    };\r\n    const handleChangeEmail = (event) => {\r\n        setEmailData(event.target.value);\r\n    };\r\n    const handleChangePassword = (event) => {\r\n        setPasswordData(event.target.value);\r\n    };\r\n    const handleChangeImg = (event) => {\r\n        console.log(event.target.files[0])\r\n        \r\n        let imageData = event.target.files[0];\r\n        setImgData(imageData);\r\n        \r\n    };\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        modifUser();\r\n        \r\n        sessionStorage.removeItem('UIC');\r\n        window.location.href='./account';\r\n    };\r\n    const userStorage = sessionStorage.getItem(\"token+id\");\r\n    const userStorageJson = JSON.parse(userStorage);\r\n    const userStorageId = userStorageJson.user_id;\r\n    const requete = new FormData();\r\n    \r\n    requete.append('nom',nameData);\r\n    requete.append('prenom',prenomData);\r\n    requete.append('adresse_email',emailData);\r\n    requete.append('mot_de_passe',passwordData);\r\n    requete.append('media',imgData);\r\n    \r\n    const userIsCo = sessionStorage.getItem('userIsCo');\r\n    const userIsCoParse = JSON.parse(userIsCo);\r\n   \r\n    if(nameData === \"\"){\r\n        requete.set('nom',userIsCoParse.nom);\r\n    };\r\n    if(prenomData === \"\"){\r\n        requete.set('prenom',userIsCoParse.prenom);\r\n\r\n    };\r\n    if(emailData === \"\"/*ajouter reGex */){\r\n        requete.set('adresse_email',userIsCoParse.adresse_email);       \r\n    };\r\n    if(passwordData === \"\"/*ajouter reGex */){\r\n        requete.set('mot_de_passe', userStorageJson.password)\r\n    };\r\n    if(!imgData){\r\n        requete.set('image_url', userIsCoParse.image_url);       \r\n        \r\n    };\r\n    const headerWithToken = new Headers();\r\n    headerWithToken.append('Authorization', 'Bearer ' + userStorageJson.token);\r\n    const putInit = {\r\n        method: 'PUT',\r\n        headers: headerWithToken,\r\n        mode: 'cors',\r\n        cache: 'default',\r\n        body: requete\r\n    };\r\n    const url = \"http://localhost:3001/api/auth/account/\"+ userStorageId;\r\n    function modifUser() {\r\n        fetch(url, putInit)\r\n        .then(res=>res.json())\r\n        .then(\r\n            (result)=>{\r\n            },\r\n            (error) => {\r\n              console.log(error)\r\n            }\r\n          )\r\n    };\r\n    return(\r\n        <div >\r\n            <form onSubmit={ handleSubmit} id='form-modif' className=\"form-modif\">\r\n                \r\n                <label htmlFor=\"nom-modif\"></label>\r\n                <input className=\"input-form-modif\" name='nom-modif' type=\"text\" placeholder= '*Nom' value={nameData} onChange={handleChangeName}/>\r\n                \r\n                <label htmlFor=\"prenom-modif\"></label>\r\n                <input className=\"input-form-modif\" name='prenom-modif' type=\"text\" placeholder='*Prenom' value={prenomData} onChange={handleChangePrenom}/>\r\n\r\n                <label htmlFor=\"email-modif\"></label>\r\n                <input className=\"input-form-modif\" name='email-modif' type=\"text\" placeholder='*@mail' value={emailData} onChange={handleChangeEmail}/>\r\n\r\n                <label name='mot-de-passe-modif'></label>\r\n                <input className=\"input-form-modif\" htmlFor=\"avatar-modif\" type=\"password\" placeholder='*Mot de passe FORT' value={passwordData} onChange={handleChangePassword}/>\r\n\r\n                <label className=\"avatar-modif\" name='avatar-modif'>Avatar</label>\r\n                <input className=\"input-file\" type= \"file\" onChange={handleChangeImg} />\r\n                \r\n                <button className=\"input-form submit-modif\" type='submit'>Validé la modification</button>\r\n\r\n           </form>\r\n            \r\n       </div>\r\n  )\r\n};\r\nexport default ModifAccount;\r\n","const DeleteAccount = () => {\r\n    let isDelete = false;\r\n    \r\n    if(window.confirm('Etes vous sur de vouloir supprimer votre compte? ')){\r\n        const userStorage = sessionStorage.getItem(\"token+id\");\r\n        const userStorageJson = JSON.parse(userStorage);\r\n        const userStorageId = userStorageJson.user_id;\r\n        const url = \"http://localhost:3001/api/auth/account/\"+ userStorageId;\r\n        const requete = {\r\n            user_id: userStorageId,\r\n            token: userStorageJson.token,\r\n        };\r\n        const headerWithToken = new Headers();\r\n        headerWithToken.append('Content-type','application/json');\r\n        headerWithToken.append('Authorization', 'Bearer ' + userStorageJson.token);\r\n        const delInit = {\r\n            method: 'DELETE',\r\n            headers: headerWithToken,\r\n            mode: 'cors',\r\n            cache: 'default',\r\n            body: JSON.stringify(requete)\r\n        };\r\n        function delUser(){\r\n            fetch(url, delInit)\r\n                .then(res => res.json(requete.token))\r\n                \r\n        };\r\n        delUser();\r\n        isDelete = true;\r\n    }\r\n\r\n    \r\n    return(\r\n        <div>{ isDelete&&\r\n            <div>\r\n                {setTimeout(() => {\r\n                    document.location.href='../';\r\n                    sessionStorage.clear();\r\n                    \r\n                }, 100)}\r\n            </div>            }\r\n        </div>\r\n    )\r\n};\r\nexport default DeleteAccount;","import {useEffect, useState} from 'react';\r\nimport {createHeader} from '../assets/js/Function';\r\n\r\nimport '../styles/Account.css'\r\nimport ModifAccount from './ModifAccount';\r\nimport DeleteAccount from './DeleteAccount';\r\nimport RecipeReviewCard from './Card';\r\n\r\n\r\nconst url = \"http://localhost:3001/api/auth/account/\";\r\n\r\nfunction Account({isConected}){\r\n    \r\n        \r\n    const [user, setUser] = useState([]);\r\n    const [userModif, setUserModif] = useState(false);\r\n\r\n\r\n    const handleSubmit = () =>{\r\n        setUserModif(true)\r\n    }\r\n     const urlPostOne = `http://localhost:3001/api/auth/post/485`;\r\n\r\n    const userStorage = sessionStorage.getItem(\"token+id\")\r\n    const userStorageJson = JSON.parse(userStorage);\r\n    useEffect(() => {\r\n       \r\n        const userStorageId = userStorageJson.user_id;\r\n        \r\n        //const myHeaders = new Headers();\r\n        const urlRequete = url+userStorageId;\r\n        \r\n        const myInit = { method: 'GET',\r\n                        headers: createHeader(),\r\n                        mode: 'cors',\r\n                        cache: 'default',\r\n                        \r\n                    };\r\n                    \r\n        fetch(urlRequete, myInit)\r\n            .then(res => res.json())\r\n            .then(\r\n            (result) => {\r\n                \r\n                setUser(result.result);\r\n\r\n            },\r\n           \r\n            (error) => {\r\n                console.log(\"error : \", error)\r\n            }\r\n            )\r\n            //eslint-disable-next-line react-hooks/exhaustive-deps\r\n        },[])\r\n        console.log(user)\r\n    return(\r\n        <div>\r\n            <section className='section-profil'>{ isConected &&\r\n                <div className=\"content-full-profil\">{user.map(item=>(\r\n                        !userModif?\r\n                    <div className='content-profil' key={Date.now()}>\r\n                        <h2 className='profil'>PROFIL </h2>\r\n                        <p className='profil-info'><span className='profil-info-static'>nom :</span> <span className='profil-info-dynamique'>{item.nom}</span></p>\r\n                        <p className='profil-info'><span className='profil-info-static'>prenom :</span> <span className='profil-info-dynamique'>{item.prenom}</span></p>\r\n                        <p className='profil-info'><span className='profil-info-static'>adresse email :</span> <span className='profil-info-dynamique'>{item.adresse_email}</span></p>\r\n                        <img className=\"avatar-profil\" src={url.split('api')[0]+\"images/avatars/\"+item.image_url} alt='Avatar utilisateur'/>\r\n\r\n                        <div className='content-button-profil' key={Date.now() + Date.now()}>\r\n                            <button alt='modifier le compte' className='button-account' onClick={()=>handleSubmit()}>🛠<span className='no-mobile'> modifier</span></button>\r\n                            <button alt=\"suprimez le compte\" className='button-account button-account-del' onClick={()=>DeleteAccount()}>⛔<span className='no-mobile'> suprimer le compte</span></button>\r\n                        </div>\r\n                    </div>\r\n                    : <div className='content-profil-modif' key={Date.now()}>\r\n                        <img className=\"avatar-profil avatar-profil-modif\" src={url.split('api')[0]+\"images/avatars/\"+item.image_url} alt='Avatar utilisateur'/>\r\n\r\n                        <ModifAccount userModif={userModif} \r\n                        \r\n                        />\r\n                    </div>\r\n                    ))}\r\n                    \r\n                </div>\r\n                }\r\n            </section>\r\n            <section>\r\n                <RecipeReviewCard url={urlPostOne}/>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Account;","import '../styles/Footer.css';\r\nconst Footer = () => {\r\n    return(\r\n        <footer>\r\n            <p className=\"text-footer\">Copyright <a href='mailto:magin.code@gmail.com'>@Magin-code 2021</a></p>\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer;","import Header from './Header';\r\nimport React, { useState } from \"react\";\r\nimport Main from './Main';\r\nimport Signup from './Signup';\r\nimport Login from './Login';\r\nimport Account from './Account';\r\nimport ModifPost from './ModifPost';\r\nimport Footer from './Footer';\r\n\r\n\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport '../styles/App.css';\r\nimport DeleteAccount from './DeleteAccount';\r\n\r\nfunction App() {\r\n  console.log(document.URL)\r\n\r\n  const isCo = sessionStorage.getItem('isCo');\r\n  const isCOJson = JSON.parse(isCo);\r\n  const [isConected, setIsConected] = useState(isCOJson);\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Header isConected = {isConected} setIsConected = {setIsConected}/>\r\n        <Route path=\"/signup\" exact component={Signup}/>\r\n        <Route path=\"/login\" exact component={() => <Login isConected={isConected} setIsConected={setIsConected}  />} /> \r\n        <Route path=\"/main\" exact component={() => <Main isConected={isConected} setIsConected={setIsConected}  />} />\r\n        <Route path=\"/account\" exact component={() => <Account onClick={Account} isConected={isConected} setIsConected={setIsConected}  />} />\r\n       \r\n        <Route path=\"/del\" exact component={() => <DeleteAccount onClick={DeleteAccount}  />} />\r\n        <Route path=\"/modify-post\" exact component={() => <ModifPost onClick={ModifPost} />} />\r\n        <Footer />\r\n      </Router>\r\n      {!isConected || isConected == false? <p className=\"is-connected\">🔴 {window.location.href.includes('/signup')? <span> pour pouvoir enregistrer un compte <br/> <br/> Veuillez entrez un mot de passe fort  et un email valide</span>:<span>Veuillez vous connecter pour accéder au site</span>} </p> : <p className=\"is-connected\">🟢 connected</p>}\r\n    </div>\r\n  );\r\n};\r\n   \r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './component/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}